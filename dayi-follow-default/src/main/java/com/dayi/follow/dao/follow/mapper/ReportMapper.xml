<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayi.follow.dao.follow.ReportMapper">
    <select id="findDaily" parameterType="map" resultType="com.dayi.follow.vo.report.ReportDailyVo">
    SELECT *,date(create_time)date from follow_up_log a
    left join (
        SELECT id deptId ,name deptName from department
    )b on b.deptId =a.dept_id
    where a.follow_id IN
    <foreach item="item" index="index" collection="followIds"
             open="(" separator="," close=")">
        #{item}
    </foreach>
    <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
        and a.create_time BETWEEN #{startDate} and #{endDate}
    </if>
    ORDER  by a.create_time desc
</select>



    <select id="findTeamDaily" parameterType="map" resultType="com.dayi.follow.vo.report.ReportDailyVo">
        select date(create_time)date,fd.name deptName,sum(open_account_num)openAccountNum,
                sum(maker_fund)makerFund,sum(in_cash)inCash,sum(in_cash_num)inCashNum,
                sum(out_cash)outCash,sum(out_cash_num)outCashNum,sum(manage_fund)manageFund,
                sum(manage_growth_fund)growthFund
        from follow_up_log
        left join (
              SELECT name,id from department
        )fd on fd.id=follow_up_log.dept_id
        WHERE dept_id= #{deptId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and create_time BETWEEN #{startDate} and #{endDate}
        </if>

        GROUP BY date(create_time) ORDER BY create_time desc
    </select>

    <select id="findTeamDailyDetail" parameterType="map" resultType="com.dayi.follow.vo.report.ReportDailyVo">
        SELECT *,date(create_time)date from follow_up_log a
        left join (
        SELECT id deptId ,name deptName from department
        )b on b.deptId =a.dept_id
        left join (
            SELECT id followId,NAME from follow_up
        )c on c.followId =a.follow_id
        where a.dept_id =#{deptId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and a.create_time BETWEEN #{startDate} and #{endDate}
        </if>
        ORDER  by a.create_time desc
    </select>

    <select id="getWeek" parameterType="map" resultType="com.dayi.follow.vo.report.MyWeekVo">
        SELECT dept_id,b.name deptName,c.name ,follow_id,
              sum(open_account_num)openAccountNum,sum(in_cash)inCash,
              sum(out_cash)outCash,sum(maker_fund)makerFund,
              sum(manage_fund)manageFund,sum(manage_growth_fund)manageGrowthFund
        from follow_up_log a
        left join (
        SELECT id,name from department
        )b on b.id =a.dept_id
        left join(
            SELECT id,name from follow_up
        )c on c.id=a.follow_id
        where a.follow_id =#{followId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and a.create_time BETWEEN #{startDate} and #{endDate}
        </if>
    </select>

    <select id="findTeamWeek" parameterType="map" resultType="com.dayi.follow.vo.report.ReportVo">
        select follow_id,dept_id,c.name ,sum(open_account_num)openAccountNum,sum(maker_fund)makerFund,
                sum(in_cash)inCash,sum(in_cash_num)inCashNum,sum(out_cash)outCash,sum(out_cash_num)outCashNum,
                sum(manage_fund)manageFund,sum(manage_growth_fund)manageGrowthFund
        from follow_up_log a
        left join (
            SELECT name,id from department
        )b on b.id=a.dept_id
        left join (
            SELECT id,name from follow_up
        )c on c.id =a.follow_id
        WHERE dept_id= #{deptId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and create_time BETWEEN #{startDate} and #{endDate}
        </if>
        group by follow_id  ORDER BY dept_id asc, follow_id asc
    </select>

    <select id="getMonth" parameterType="map" resultType="com.dayi.follow.vo.report.MyMonthVo">
        SELECT dept_id,b.name deptName,c.name ,follow_id,
        sum(open_account_num)openAccountNum,sum(in_cash)inCash,
        sum(out_cash)outCash,sum(maker_fund)makerFund,
        sum(manage_fund)manageFund,sum(manage_growth_fund)manageGrowthFund
        from follow_up_log a
        left join (
        SELECT id,name from department
        )b on b.id =a.dept_id
        left join(
            SELECT id,name from follow_up
        )c on c.id=a.follow_id
        where a.follow_id =#{followId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and a.create_time BETWEEN #{startDate} and #{endDate}
        </if>
    </select>

    <select id="findTeamMonth" parameterType="map" resultType="com.dayi.follow.vo.report.ReportVo">
        select follow_id,dept_id,b.name deptName,c.name,sum(open_account_num)openAccountNum,
                sum(maker_fund)makerFund,sum(manage_fund)manageFund,sum(manage_growth_fund)manageGrowthFund,
                sum(in_cash)inCash,sum(out_cash)outCash
        from follow_up_log a
        left join (
            SELECT name,id from department
        )b on b.id=a.dept_id
        left join(
            SELECT id,name from follow_up
        )c on c.id =a.follow_id
        WHERE dept_id= #{deptId}
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and create_time BETWEEN #{startDate} and #{endDate}
        </if>
        group by follow_id  ORDER BY dept_id asc, follow_id asc
    </select>


    <select id="findAdminWeekPer" parameterType="map" resultType="com.dayi.follow.vo.report.WeekVo">
     	SELECT date,follow_id,sum(num1)openAccountNum,sum(num2)inCash,e.id deptId
        from  (
                SELECT date,follow_id,if(date=createDate,openNum,0)num1,if(date=createDate,inCashNum,0)num2,d.id
                from (
                        SELECT #{startDate} date
                        union SELECT DATE_ADD(#{startDate},INTERVAL 1 day)
                        union SELECT DATE_ADD(#{startDate},INTERVAL 2 day)
                        union SELECT DATE_ADD(#{startDate},INTERVAL 3 day)
                        union SELECT DATE_ADD(#{startDate},INTERVAL 4 day)
                )a
                cross  join (
                        SELECT date(create_time)createDate,follow_id ,sum(open_account_num)openNum,sum(in_cash)inCashNum,c.id
                        from follow_up_log b
                        left join (
                                SELECT id from department
                        )c on b.dept_id=c.id  WHERE 1=1
                        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
                            and date(create_time) BETWEEN #{startDate} and #{endDate}
                        </if>
                        GROUP BY  follow_id,date(create_time)
                 )d
         )e GROUP BY follow_id,date ORDER BY deptId asc, follow_id asc,date asc
    </select>

    <select id="findAdminWeekSum" parameterType="map" resultType="com.dayi.follow.vo.report.WeekVo">
        SELECT dept_id,b.name deptName,c.name,follow_id,
              sum(open_account_num)openAccountNum,sum(in_cash)inCash
        from follow_up_log a
        left join (
            SELECT name,id from department
        )b on b.id=a.dept_id
        left join (
            SELECT name,id FROM follow_up
        )c on c.id =a.follow_id where 1=1
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
         and date(create_time) BETWEEN #{startDate} and #{endDate}
        </if>
        group by follow_id  ORDER BY dept_id asc, follow_id asc
    </select>

    <select id="findAdminMonth" parameterType="map" resultType="com.dayi.follow.vo.report.MonthVo">
        SELECT a.follow_id,c.name deptName,b.name,b.invite_code,sum(open_account_num)openNum,sum(in_cash)inCash
        from follow_up_log a
        LEFT join (
            SELECT id,name,invite_code from follow_up
        )b on b.id =a.follow_id
        left join (
            SELECT id,name from department
        )c on c.id =a.dept_id
        where 1=1
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and create_time BETWEEN #{startDate} and #{endDate}
        </if>
        group by a.follow_id
        ORDER BY c.id asc , a.follow_id asc
    </select>

    <select id="getReport" parameterType="map" resultType="com.dayi.follow.vo.report.ReportVo">
        SELECT date(create_time)date,b.name deptName,dept_id ,sum(open_account_num)openAccountNum,
                sum(maker_fund)makerFund,sum(in_cash)inCash,sum(in_cash_num)inCashNum,
                sum(out_cash)outCash,sum(out_cash_num)outCashNum,sum(manage_fund)manageFund,
                (inCash-outCash) growthFund,sum(manage_growth_fund)manageGrowthFund
        from follow_up_log  a
        left join(
            SELECT name,id from department
        )b on b.id=a.dept_id  WHERE 1=1
        <if test="''!=startDate and null!=startDate and ''!=endDate and null!=endDate">
            and a.create_time BETWEEN #{startDate} and #{endDate}
        </if>
    </select>

    <select id="findAdminDailyDetail" parameterType="map" resultType="com.dayi.follow.vo.report.ReportDailyVo">
        SELECT date(create_time)date,b.name deptName,c.name,dept_id ,open_account_num,
        maker_growth_fund,in_cash,in_cash_num,
        out_cash,out_cash_num
        from follow_up_log  a
        left join(
            SELECT name,id from department
        )b on b.id=a.dept_id
        left join(
            SELECT id,name FROM follow_up
        )c on c.id=a.follow_id
        WHERE 1=1
        and a.create_time BETWEEN #{startDate} and #{endDate}
        and a.dept_id=#{deptId}
        ORDER BY create_time desc
    </select>

    <select id="getManageFund" parameterType="map" resultType="java.math.BigDecimal">
        SELECT sum(e.useable + e.frozen + e.out_frozen +  0.8*e.cargo_interest+e.cargo_interest_puchas - f.total_fund_before)manageFund
        from agent a
        left join (
            SELECT id from organization where org_type in (4,5) and status=1 and del_status!=-1
        )b on a.org_id = b.idd
        left join (
            SELECT * from finance_account  WHERE create_date &lt; #{endDate}

        )c on c.id =a.account_id
        left join(
            SELECT * from follow_agent WHERE create_date &lt; #{endDate}
        )d on d.agent_id =a.id
        where a.del_status != -1


    </select>

    <select id="getMakerInCash" parameterType="map" resultType="java.math.BigDecimal">
        SELECT c.inAccrual
        from agent a
        left join (
            SELECT id from organization where org_type in (4,5) and status=1 and del_status!=-1
        )b on a.org_id = b.id
        LEFT JOIN (
            select agent_org_id,sum(accrual)inAccrual
            from ${assistDataBase}.finance_account_log WHERE create_date between  #{startDate}  and #{endDate}
            and pay_type=1 and account_type != 1 GROUP BY agent_org_id
        )c on c.agent_org_id=a.id
        where a.del_status != -1
    </select>

    <select id="getMakerOutCash" parameterType="map" resultType="java.math.BigDecimal">
        SELECT c.outAccrual
        from agent a
        left join (
        SELECT id from organization where org_type in (4,5) and status=1 and del_status!=-1
        )b on a.org_id = b.id
         LEFT JOIN (
            select agent_org_id,sum(accrual)outAccrual
            from ${assistDataBase}.finance_account_log WHERE create_date between  #{startDate}  and #{endDate}
            and pay_type in (-9,-112) and account_type != 1 GROUP BY agent_org_id
        )c on c.agent_org_id=a.id
        where a.del_status != -1
    </select>


    <select id="getOtherManageFund" parameterType="map" resultType="java.math.BigDecimal">
        SELECT sum(e.useable + e.frozen + e.out_frozen +  0.8*e.cargo_interest+e.cargo_interest_puchas - f.total_fund_before)manageFund
        from agent a
        left join (
            SELECT agent_id,follow_id from follow_agent
        )b on a.org_id = b.idd
        left join finance_account c on c.id =a.account_id
        left join follow_agent d on d.agent_id =a.id
        where a.del_status != -1 and a.org_id is NULL and b.follow_id is NULL
    </select>

    <select id="getOtherInCash" parameterType="map" resultType="java.math.BigDecimal">
        SELECT c.inAccrual
        from agent a
        left join (
            SELECT agent_id,follow_id from follow_agent
        )b on a.org_id = b.id
        LEFT JOIN (
        select agent_org_id,sum(accrual)inAccrual
        from ${assistDataBase}.finance_account_log WHERE create_date between  #{startDate}  and #{endDate}
        and pay_type=1 and account_type != 1 GROUP BY agent_org_id
        )c on c.agent_org_id=a.id
         where a.del_status != -1 and a.org_id is NULL and b.follow_id is NULL
    </select>

    <select id="getOtherOutCash" parameterType="map" resultType="java.math.BigDecimal">
        SELECT c.outAccrual
        from agent a
        left join (
            SELECT agent_id,follow_id from follow_agent
        )b on a.id = b.agent_id
        LEFT JOIN (
            select agent_org_id,sum(accrual)outAccrual
            from ${assistDataBase}.finance_account_log WHERE create_date between  #{startDate}  and #{endDate}
            and pay_type in (-9,-112) and account_type != 1 GROUP BY agent_org_id
        )c on c.agent_org_id=a.id
        where a.del_status != -1 and a.org_id is NULL and b.follow_id is NULL
    </select>

    <select id="getFollowUpManageFund" parameterType="map" resultType="java.math.BigDecimal">
        SELECT sum(manage_fund)manageFund from follow_up_log a
        where create_time between  #{startDate}  and #{endDate}
        and type =#{type}
    </select>

    <select id="getFollowUpInCash" parameterType="map" resultType="java.math.BigDecimal">
       SELECT sum(in_cash)inCash from follow_up_log a
       where create_time between  #{startDate}  and #{endDate}
       and type =#{type}
    </select>

    <select id="getFollowUpOutCash" parameterType="map" resultType="java.math.BigDecimal">
        SELECT sum(out_cash)outCash from follow_up_log a
        where create_time between  #{startDate}  and #{endDate}
        and type =#{type}
    </select>


</mapper>