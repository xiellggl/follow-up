function BarrettMu(i){this.modulus=biCopy(i);this.k=biHighIndex(this.modulus)+1;var t=new BigInt;t.digits[2*this.k]=1;this.mu=biDivide(t,this.modulus);this.bkplus1=new BigInt;this.bkplus1.digits[this.k+1]=1;this.modulo=BarrettMu_modulo;this.multiplyMod=BarrettMu_multiplyMod;this.powMod=BarrettMu_powMod}function BarrettMu_modulo(i){var t=biDivideByRadixPower(i,this.k-1);var u=biMultiply(t,this.mu);var r=biDivideByRadixPower(u,this.k+1);var o=biModuloByRadixPower(i,this.k+1);var s=biMultiply(r,this.modulus);var d=biModuloByRadixPower(s,this.k+1);var l=biSubtract(o,d);if(l.isNeg){l=biAdd(l,this.bkplus1)}var h=biCompare(l,this.modulus)>=0;while(h){l=biSubtract(l,this.modulus);h=biCompare(l,this.modulus)>=0}return l}function BarrettMu_multiplyMod(i,t){var u=biMultiply(i,t);return this.modulo(u)}function BarrettMu_powMod(i,t){var u=new BigInt;u.digits[0]=1;var r=i;var o=t;while(true){if((o.digits[0]&1)!=0)u=this.multiplyMod(u,r);o=biShiftRight(o,1);if(o.digits[0]==0&&biHighIndex(o)==0)break;r=this.multiplyMod(r,r)}return u}